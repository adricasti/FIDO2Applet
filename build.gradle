plugins {
    id("java")
}

group = "us.q3q"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
}

// Create a new configuration for JCDK compilation
configurations {
    jcdk
}

dependencies {
    // JCDK dependencies for CAP generation
    jcdk files('../jckit/lib/api_classic-3.0.5.jar')
    
    // Main and test dependencies use JCardSim
    implementation files('../jcardsim-3.0.5.jar')
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
}

tasks.register('testJar', Jar) {
    archiveBaseName = project.name + '-tests'
    duplicatesStrategy = 'include'
    from sourceSets.test.output + sourceSets.test.allSource
    from {
        sourceSets.test.runtimeClasspath.filter {
            it.toString().indexOf("jcardsim-") != -1
        }.collect {
            zipTree(it)
        }
    }
}

// Special task for compiling with JCDK API
task classesCap(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.jcdk
    destinationDirectory = file("${buildDir}/classes/jcdk")
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

// Add package configuration
def packageConfig = [
    AID: "0xA0:0x00:0x00:0x06:0x47:0x2F:0x00:0xFE",
    name: "us.q3q.fido2",
    AppletAID: "0xA0:0x00:0x00:0x06:0x47:0x2F:0x00:0x01",
    version: "1.0"
]

task(buildCap, type: JavaExec) {
    mainClass = "com.sun.javacard.converter.Main"
    classpath = files("${projectDir}/../jckit/lib/tools.jar")
    args "-classdir", "${buildDir}/classes/jcdk",
         "-applet", "${packageConfig.AppletAID}",
         "${packageConfig.name}.FIDO2Applet",
         "-target", "3.0.5",
         "${packageConfig.name}",
         "${packageConfig.AID}",
         "${packageConfig.version}"
}

buildCap.dependsOn classesCap
build.dependsOn buildCap